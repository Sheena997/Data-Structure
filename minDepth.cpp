/*
111. 二叉树的最小深度
给定一个二叉树，找出其最小深度。
最小深度是从根节点到最近叶子节点的最短路径上的节点数量。
说明: 叶子节点是指没有子节点的节点。

示例:
给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回它的最小深度  2.

来源：LeetCode
链接：https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/
*/
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root == nullptr)
            return 0;
        
        int leftLen = minDepth(root->left);
        int rightLen = minDepth(root->right);
        
        if(leftLen != 0 && rightLen != 0)
            return 1 + min(leftLen, rightLen);
        else
            return 1 + leftLen + rightLen;
    }
};